version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: edge-api
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - .env.local
    command: sh -c "npm run migration:run && npm run start:dev"

  postgres:
    image: postgres:15
    container_name: edge-db
    restart: always
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    mem_limit: 1g
    container_name: edge-rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_port_connectivity" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  postgres_data:
  rabbitmq_data:
  rabbitmq_logs: